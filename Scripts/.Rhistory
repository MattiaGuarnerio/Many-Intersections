)
# Ending the timer for the estimation or loading of the null specification for probability of being employed under a permanent contract.
toc()
# Warnings are suppressed because a bug in the brm_multiple command yields a false positive warning for convergence issues.
suppressWarnings(summary(empty_cont4_rob))
any(round(empty_cont4_rob$rhats, 2) >= 1.01)
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(empty_cont4_rob)$strata_rob$sd[1]^2
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(empty_cont4_rob)$residual__$sd[1]^2
# Rounding to the second decimal place when reporting the VPC.
round(
(VarCorr(empty_cont4_rob)$strata_rob$sd[1]^2 /
(VarCorr(empty_cont4_rob)$strata_rob$sd[1]^2 +
VarCorr(empty_cont4_rob)$residual__$sd[1]^2)
) * 100, 2
)
# Calling the custom run_prediction function to draw the predicted values.
run_predictions(
empty_cont4_rob |> add_epred_draws(newdata = imp_pred,
ndraws = 10000) |>
# Computing means of predicted values across intersectional strata.
group_by(strata_rob) |> mean_qi(.epred),
path =
"Data/Many Intersections in Search of an Author/pred_empty_cont4_rob"
)
# Releasing the unused memory to keep the environment clean.
gc()
# Starting the timer for the estimation or loading of the partially adjusted specification for probability of being employed under a permanent contract.
tic()
# Setting a seed to ensure reproducibility and saving the file in the path indicated with the file option.
# The model is compressed with the gzip format, since its size is very large (≈1 GB) and never refitted when a file already exists in the specified path.
# adapt_delta is increased to 0.99 to decrease step size and offset the risk of convergence issues, in the form of divergent transitions.
adj_cont4_rob <- brm_multiple(y9_w_cont4 ~ 1 + y9_hisei + y9_sex +
y9_generation3 + y9_hgendeg +
(1|strata_rob),
data = imp_main,
warmup = 5000,
iter = 10000,
chains = 8,
seed = 420,
control = list(adapt_delta = 0.99),
file = "Data/Many Intersections in Search of an Author/adj_cont4_rob",
file_compress = "gzip",
file_refit = "never"
)
# Ending the timer for the estimation or loading of the partially adjusted specification for probability of being employed under a permanent contract.
toc()
# Warnings are suppressed because a bug in the brm_multiple command yields a false positive warning for convergence issues.
suppressWarnings(summary(adj_cont4_rob))
any(round(adj_cont4_rob$rhats, 2) >= 1.01)
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(adj_cont4_rob)$strata_rob$sd[1]^2
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(adj_cont4_rob)$residual__$sd[1]^2
# Rounding to the second decimal place when reporting the adjusted VPC.
round(
(VarCorr(adj_cont4_rob)$strata_rob$sd[1]^2 /
(VarCorr(adj_cont4_rob)$strata_rob$sd[1]^2 +
VarCorr(adj_cont4_rob)$residual__$sd[1]^2)
) * 100, 2
)
# Rounding to the second decimal place when reporting the PCV.
round(
(VarCorr(empty_cont4_rob)$strata_rob$sd[1]^2 -
VarCorr(adj_cont4_rob)$strata_rob$sd[1]^2) /
VarCorr(empty_cont4_rob)$strata_rob$sd[1]^2 * 100, 2
)
# Removing the null specification for job security to keep the environment clean.
rm(empty_cont4_rob)
# Releasing the unused memory to keep the environment clean.
gc()
# Calling the custom run_prediction function to draw the predicted values.
run_predictions(
adj_cont4_rob |> add_epred_draws(newdata = imp_pred,
ndraws = 10000) |>
# Computing means of predicted values across intersectional strata.
group_by(strata_rob) |> mean_qi(.epred),
path =
"Data/Many Intersections in Search of an Author/pred_adj_cont4_rob"
)
# Calling the custom run_prediction function to draw the expected values.
run_predictions(
adj_cont4_rob |> add_epred_draws(newdata = imp_pred,
ndraws = 10000,
# Random effects are factored out.
re_formula = NA) |>
# Computing means of expected values across intersectional strata.
group_by(strata_rob) |> mean_qi(.epred),
path =
"Data/Many Intersections in Search of an Author/exp_adj_cont4_rob"
)
run_ranef(as_tibble(ranef(adj_cont4_rob)$strata_rob) |>
# Rounding to the fourth decimal place.
round(4) |> rowwise() |>
# Assigning strata IDs to each random effect.
mutate(strata_rob = cur_group_id()) |> relocate(strata_rob),
path =
"Data/Many Intersections in Search of an Author/ranef_adj_cont4_rob"
)
# Removing the partially adjusted specification for job security to keep the environment clean.
rm(adj_cont4_rob)
# Releasing the unused memory to keep the environment clean.
gc()
# Starting the timer for the estimation or loading of the null specification for probability of being employed under a permanent contract.
tic()
# Setting a seed to ensure reproducibility and saving the file in the path indicated with the file option.
# The model is compressed with the gzip format, since its size is very large (≈1 GB) and never refitted when a file already exists in the specified path.
empty_incCS_rob <- brm_multiple(y9_w_incCS ~ 1 + (1|strata_rob),
data = imp_main,
warmup = 5000,
iter = 10000,
chains = 8,
seed = 420,
file = "Data/Many Intersections in Search of an Author/empty_incCS_rob",
file_compress = "gzip",
file_refit = "never"
)
# Ending the timer for the estimation or loading of the null specification for probability of being employed under a permanent contract.
toc()
# Warnings are suppressed because a bug in the brm_multiple command yields a false positive warning for convergence issues.
suppressWarnings(summary(empty_incCS_rob))
any(round(empty_incCS_rob$rhats, 2) >= 1.01)
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(empty_incCS_rob)$strata_rob$sd[1]^2
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(empty_incCS_rob)$residual__$sd[1]^2
# Rounding to the second decimal place when reporting the VPC.
round(
(VarCorr(empty_incCS_rob)$strata_rob$sd[1]^2 /
(VarCorr(empty_incCS_rob)$strata_rob$sd[1]^2 +
VarCorr(empty_incCS_rob)$residual__$sd[1]^2)
) * 100, 2
)
# Calling the custom run_prediction function to draw the predicted values.
run_predictions(
empty_incCS_rob |> add_epred_draws(newdata = imp_pred,
ndraws = 10000) |>
group_by(strata_rob) |> mean_qi(.epred),
# Computing means of predicted values across intersectional strata.
path =
"Data/Many Intersections in Search of an Author/pred_empty_incCS_rob"
)
# Releasing the unused memory to keep the environment clean.
gc()
# Starting the timer for the estimation or loading of the partially adjusted specification for net monthly income.
tic()
# Setting a seed to ensure reproducibility and saving the file in the path indicated with the file option.
# The model is compressed with the gzip format, since its size is very large (≈1 GB) and never refitted when a file already exists in the specified path.
# adapt_delta is increased to 0.9999 to decrease step size and offset the risk of convergence issues, in the form of divergent transitions.
# max_treedepth is also raised to 12, to avoid the No U-Turn (NUTS) sampler interrupting the Hamiltonian Monte Carlo (HMC) simulation before it reaches convergence with this smaller step size.
adj_incCS_rob <- brm_multiple(y9_w_incCS ~ 1 + y9_hisei + y9_sex +
y9_generation3 + y9_hgendeg +
(1|strata_rob),
data = imp_main,
warmup = 5000,
iter = 10000,
chains = 8,
seed = 420,
control = list(adapt_delta = 0.9999,
max_treedepth = 12),
file = "Data/Many Intersections in Search of an Author/adj_incCS_rob",
file_compress = "gzip",
file_refit = "never"
)
# Ending the timer for the estimation or loading of the partially adjusted specification for net monthly income.
toc()
# Warnings are suppressed because a bug in the brm_multiple command yields a false positive warning for convergence issues.
suppressWarnings(summary(adj_incCS_rob))
any(round(adj_incCS_rob$rhats, 2) >= 1.01)
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(adj_incCS_rob)$strata_rob$sd[1]^2
# brm_multiple estimates standard deviation instead of variances, so the parameter must be elevated to the power of 2.
VarCorr(adj_incCS_rob)$residual__$sd[1]^2
# Rounding to the second decimal place when reporting the adjusted VPC.
round(
(VarCorr(adj_incCS_rob)$strata$sd[1]^2 /
(VarCorr(adj_incCS_rob)$strata$sd[1]^2 +
VarCorr(adj_incCS_rob)$residual__$sd[1]^2)
) * 100, 2
)
# Rounding to the second decimal place when reporting the PCV.
round(
(VarCorr(empty_incCS_rob)$strata_rob$sd[1]^2 -
VarCorr(adj_incCS_rob)$strata_rob$sd[1]^2) /
VarCorr(empty_incCS_rob)$strata_rob$sd[1]^2 * 100, 2
)
# Removing the null specification for early career returns to keep the environment clean.
rm(empty_incCS_rob)
# Releasing the unused memory to keep the environment clean.
gc()
# Calling the custom run_prediction function to draw the predicted values.
run_predictions(
adj_incCS_rob |> add_epred_draws(newdata = imp_pred,
ndraws = 10000) |>
group_by(strata_rob) |> mean_qi(.epred),
# Computing means of predicted values across intersectional strata.
path =
"Data/Many Intersections in Search of an Author/pred_adj_incCS_rob"
)
# Calling the custom run_prediction function to draw the expected values.
run_predictions(
adj_incCS_rob |> add_epred_draws(newdata = imp_pred,
ndraws = 10000,
# Random effects are factored out.
re_formula = NA) |>
# Computing means of expected values across intersectional strata.
group_by(strata_rob) |> mean_qi(.epred),
path =
"Data/Many Intersections in Search of an Author/exp_adj_incCS_rob"
)
run_ranef(as_tibble(ranef(adj_incCS_rob)$strata_rob) |>
# Rounding to the fourth decimal place.
round(4) |> rowwise() |>
# Assigning strata IDs to each random effect.
mutate(strata_rob = cur_group_id()) |> relocate(strata_rob),
path =
"Data/Many Intersections in Search of an Author/ranef_adj_incCS_rob"
)
# Removing the partially adjusted specification for early career returns to keep the environment clean.
rm(adj_incCS_rob)
# Releasing the unused memory to keep the environment clean.
gc()
# Loading predicted values in the null specification.
pred_empty_cont4_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/pred_empty_cont4_rob.rds")
# Loading expected values in the partially adjusted specification.
exp_adj_cont4_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/exp_adj_cont4_rob.rds")
# Loading predicted values in the partially adjusted specification.
pred_adj_cont4_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/pred_adj_cont4_rob.rds")
# Loading the random effects.
ranef_adj_cont4_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/ranef_adj_cont4_rob.rds")
# Renaming, selecting, and joining predicted and expected values and random effects by intersectional stratum.
tablea8 <- pred_empty_cont4_rob |> rename(
pred_empty = .epred, pred_empty_lower = .lower,
pred_empty_upper = .upper
) |> select(-.width, -.point, -.interval) |>
inner_join(exp_adj_cont4_rob |>
rename(
exp_adj = .epred, exp_adj_lower = .lower,
exp_adj_upper = .upper
) |> select(-.width, -.point, -.interval),
by = "strata_rob"
) |> inner_join(pred_adj_cont4_rob |>
rename(
pred_adj = .epred, pred_adj_lower = .lower,
pred_adj_upper = .upper
) |> select(-.width, -.point, -.interval),
by = "strata_rob"
) |> inner_join(ranef_adj_cont4_rob |>
rename(
ranef = Estimate.Intercept,
ranef_lower = Q2.5.Intercept,
ranef_upper = Q97.5.Intercept
) |> select(-Est.Error.Intercept),
by = "strata_rob"
# Rounding every figure at least to the fourth decimal place.
) |> round(4) |>
# Joining intersectional strata indicators of parental social class, gender, migration background, and educational track, as well as strata sample sizes.
inner_join(readRDS(file = "Data/Many Intersections in Search of an Author/imp_main")[[42]] |>
select(strata_rob, y9_hisei, y9_sex,
y9_generation3, y9_hgendeg,
count_rob) |>
group_by(strata_rob) |> slice_head() |> ungroup(),
by = "strata_rob") |>
relocate(strata_rob, count_rob,
y9_hisei, y9_sex, y9_generation3, y9_hgendeg)
# Table A8 is stored in memory with saveRDS.
saveRDS(tablea8, file = "Data/Many Intersections in Search of an Author/tablea8.rds", compress = "gzip")
# Removing all predicted and expected values and random effects to keep the environment clean.
rm(pred_empty_cont4_rob, exp_adj_cont4_rob,
pred_adj_cont4_rob, ranef_adj_cont4_rob)
# Showing Table A8 and reporting it into the Appendix.
tablea8
# Loading predicted values in the null specification.
pred_empty_incCS_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/pred_empty_incCS_rob.rds")
# Loading expected values in the partially adjusted specification.
exp_adj_incCS_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/exp_adj_incCS_rob.rds")
# Loading predicted values in the partially adjusted specification.
pred_adj_incCS_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/pred_adj_incCS_rob.rds")
# Loading the random effects.
ranef_adj_incCS_rob <- readRDS(file = "Data/Many Intersections in Search of an Author/ranef_adj_incCS_rob.rds")
# Renaming, selecting, and joining predicted and expected values and random effects by intersectional stratum.
tablea10 <- pred_empty_incCS_rob |> rename(
pred_empty = .epred, pred_empty_lower = .lower,
pred_empty_upper = .upper
) |> select(-.width, -.point, -.interval) |>
inner_join(exp_adj_incCS_rob |>
rename(
exp_adj = .epred, exp_adj_lower = .lower,
exp_adj_upper = .upper
) |> select(-.width, -.point, -.interval),
by = "strata_rob"
) |> inner_join(pred_adj_incCS_rob |>
rename(
pred_adj = .epred, pred_adj_lower = .lower,
pred_adj_upper = .upper
) |> select(-.width, -.point, -.interval),
by = "strata_rob"
) |> inner_join(ranef_adj_incCS_rob |>
rename(
ranef = Estimate.Intercept,
ranef_lower = Q2.5.Intercept,
ranef_upper = Q97.5.Intercept
) |> select(-Est.Error.Intercept),
by = "strata_rob"
# Rounding every figure at least to the fourth decimal place.
) |> round(4) |>
# Joining intersectional strata indicators of parental social class, gender, migration background, and educational track, as well as strata sample sizes.
inner_join(readRDS(file = "Data/Many Intersections in Search of an Author/imp_main")[[42]] |>
select(strata_rob, y9_hisei, y9_sex,
y9_generation3, y9_hgendeg,
count_rob) |>
group_by(strata_rob) |> slice_head() |> ungroup(),
by = "strata_rob") |>
relocate(strata_rob, count_rob,
y9_hisei, y9_sex, y9_generation3, y9_hgendeg)
# Table A10 is stored in memory with saveRDS.
saveRDS(tablea10, file = "Data/Many Intersections in Search of an Author/tablea10.rds", compress = "gzip")
# Removing all predicted and expected values and random effects to keep the environment clean.
rm(pred_empty_incCS_rob, exp_adj_incCS_rob,
pred_adj_incCS_rob, ranef_adj_incCS_rob)
# Showing Table A10 and reporting it into the Appendix.
tablea10
# Migration background placeholders are set to their nominal values.
figurea4 <- tablea8 |>
mutate(
y9_generation3 = case_when(
y9_generation3 == "No, native-born" ~
"All Grandparents\nGerman-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, native-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, foreign-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nForeign-born",
TRUE ~ y9_generation3
)
) |>
ggplot(aes(x = pred_empty, y = y9_sex,
color = y9_sex)) +
# Predicted values are plotted by points contained in error bars.
geom_errorbar(aes(xmin = pred_empty_lower, xmax = pred_empty_upper)) +
geom_point() +
# Showing social categories as nested facets with ggh4x.
facet_nested(~ y9_hisei + y9_generation3 + y9_hgendeg) +
# The x and y coordinates are flipped for easier visualisation.
coord_flip(clip = "off") +
# Setting labels, titles, and theme elements.
theme_bw() +
xlab("Predicted Mean Probability of being Employed under a Permanent Contract") +
ylab("") +
ggtitle("Figure A4 – Predicted Mean Probability of being Employed under a\nPermanent Contract with 95% Credible Intervals in the Null Model\nacross Intersectional Strata [Robustness Checks]") +
theme(
plot.title = element_text(size = 13, hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 13),
strip.placement = "inside",
strip.text = element_text(size = 6.5),
legend.position = "bottom",
legend.text = element_text(size = 11.5),
legend.title = element_text(size = 11.5)
) + scale_x_continuous(breaks = seq(0.50, 0.95, 0.01)) +
scale_y_discrete(labels = c("Man","Woman")) +
labs(color = "Gender") +
scale_color_manual(values = c("#4281a4", "#E06C9F"))
# Figure A4 is stored in memory with saveRDS.
ggsave(filename = "Tables & Figures/figurea4.png", plot = figurea4,
width = 10, height = 8, dpi = 300)
# Migration background placeholders are set to their nominal values.
figurea6 <- tablea10 |>
mutate(
y9_generation3 = case_when(
y9_generation3 == "No, native-born" ~
"All Grandparents\nGerman-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, native-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, foreign-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nForeign-born",
TRUE ~ y9_generation3
)
) |>
ggplot(aes(x = pred_empty, y = y9_sex, color = y9_sex)) +
# Predicted values are plotted by points contained in error bars.
geom_errorbar(aes(xmin = pred_empty_lower, xmax = pred_empty_upper)) +
geom_point() +
# Showing social categories as nested facets with ggh4x.
facet_nested(~ y9_hisei + y9_generation3 + y9_hgendeg) +
# The x and y coordinates are flipped for easier visualisation.
coord_flip(clip = "off") +
# Setting labels, titles, and theme elements.
theme_bw() +
xlab("Predicted Mean Net Monthly Income (€)") + ylab("") +
ggtitle("Figure A6 – Predicted Mean Net Monthly Income (€) with\n95% Credible Intervals in the Null Model across\nIntersectional Strata [Robustness Checks]") +
theme(
plot.title = element_text(size = 13, hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 11.5),
axis.title.y = element_text(size = 13),
strip.placement = "inside",
strip.text = element_text(size = 6.5),
legend.position = "bottom",
legend.text = element_text(size = 11.5),
legend.title = element_text(size = 11.5)
) + scale_x_continuous(breaks = seq(1450, 2100, 25)) +
scale_y_discrete(labels = c("Man","Woman")) +
labs(color = "Gender") +
scale_color_manual(values = c("#4281a4", "#E06C9F"))
# Figure A6 is stored in memory with saveRDS.
ggsave(filename = "Tables & Figures/figurea6.png", plot = figurea6,
width = 10, height = 8, dpi = 300)
# Migration background placeholders are set to their nominal values.
figurea5 <- tablea8 |>
mutate(
y9_generation3 = case_when(
y9_generation3 == "No, native-born" ~
"All Grandparents\nGerman-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, native-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, foreign-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nForeign-born",
TRUE ~ y9_generation3
)
) |>
ggplot(aes(x = ranef, y = y9_sex, color = y9_sex)) +
# Predicted values are plotted by points contained in error bars.
geom_errorbar(aes(xmin = ranef_lower, xmax = ranef_upper)) +
geom_point() +
# A semi-transparent, jet black line is added to signal y = 0, to foster the interpretability of 95% credible intervals.
geom_vline(xintercept = 0, color = "#2C302E",
linetype = "solid", linewidth = 0.5, alpha = 0.5) +
# Showing social categories as nested facets with ggh4x.
facet_nested(~ y9_hisei + y9_generation3 + y9_hgendeg) +
# The x and y coordinates are flipped for easier visualisation.
coord_flip(clip = "off", xlim = c(-0.05, 0.05)) +
# Setting labels, titles, and theme elements.
theme_bw() +
xlab(expression(mu[0][j])) + ylab("") +
ggtitle(
"Figure A5 – Interaction Effects for Probability of being\nEmployed under a Permanent Contract (strata-level Residuals μ₀ⱼ) with\n95% Credible Intervals across Intersectional Strata [Robustness Checks]") +
theme(
plot.title = element_text(size = 13, hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 11.5),
axis.title.y = element_text(size = 13),
strip.placement = "inside",
strip.text = element_text(size = 6.5),
legend.position = "bottom",
legend.text = element_text(size = 11.5),
legend.title = element_text(size = 11.5)
) + scale_x_continuous(breaks = seq(-0.05, 0.05, 0.005)) +
scale_y_discrete(labels = c("Man", "Woman")) +
labs(color = "Gender") +
scale_color_manual(values = c("#4281a4", "#E06C9F"))
# Figure A5 is stored in memory with saveRDS.
ggsave(filename = "Tables & Figures/figurea5.png", plot = figurea5,
width = 10, height = 8, dpi = 300)
# Migration background placeholders are set to their nominal values.
figurea7 <- tablea10 |>
mutate(
y9_generation3 = case_when(
y9_generation3 == "No, native-born" ~
"All Grandparents\nGerman-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, native-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nNative-born",
y9_generation3 == "Yes, foreign-born" ~
">=1 Grandparent\nnon-German-born,\nRespondent\nForeign-born",
TRUE ~ y9_generation3
)
) |>
ggplot(aes(x = ranef, y = y9_sex, color = y9_sex)) +
# Predicted values are plotted by points contained in error bars.
geom_errorbar(aes(xmin = ranef_lower, xmax = ranef_upper)) +
geom_point() +
# A semi-transparent, jet black line is added to signal y = 0, to foster the interpretability of 95% credible intervals.
geom_vline(xintercept = 0, color = "#2C302E",
linetype = "solid", linewidth = 0.5, alpha = 0.5) +
# Showing social categories as nested facets with ggh4x.
facet_nested(~ y9_hisei + y9_generation3 + y9_hgendeg) +
# The x and y coordinates are flipped for easier visualisation.
coord_flip(clip = "off", xlim = c(-130, 130)) +
# Setting labels, titles, and theme elements.
theme_bw() +
xlab(expression(""*mu[0][j]*" (€)")) + ylab("") +
ggtitle("Figure A7 – Interaction Effects for Net Monthly Income (€)\n(strata-level Residuals μ₀ⱼ) with 95% Credible Intervals\nacross Intersectional Strata [Robustness Checks]"
) +
theme(
plot.title = element_text(size = 13, hjust = 0.5),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 11.5),
axis.title.y = element_text(size = 13),
strip.placement = "inside",
strip.text = element_text(size = 6.5),
legend.position = "bottom",
legend.text = element_text(size = 11.5),
legend.title = element_text(size = 11.5)
) + scale_x_continuous(breaks = seq(-130, 130, 10)) +
scale_y_discrete(labels = c("Man","Woman")) +
labs(color = "Gender") +
scale_color_manual(values = c("#4281a4", "#E06C9F"))
# Figure A7 is stored in memory with saveRDS.
ggsave(filename = "Tables & Figures/figurea7.png", plot = figurea7,
width = 10, height = 8, dpi = 300)
# Removing all tables and figures to keep the environment clean.
rm(tablea8, tablea10,
figurea4, figurea5, figurea6, figurea7)
# Removing all versions of the analytic sample and custom helper functions.
rm(imp_main, imp_pred, run_predictions, run_ranef)
# Releasing the unused memory to keep the environment clean.
gc()
